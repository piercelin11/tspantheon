<%- include( "partials/header.ejs" ) %>

<main>

    <div class="main">
        <h1 class="chart-title">Album Ranking</h1>

        <!-- 選單 -->
        <div class="chart-menu">                        
            <button class="rounded" id="testbtn">
                <a href="">Taylor Swift</a> 
            </button>  
            <button class="rounded">
                <a href="">Fearless</a> 
            </button>     
        </div>

        <!-- 排名紀錄圖表 -->
        <h3>songs in top 50%</h3>
        <div class="dark-bk mid-padding btm-margin">
            <canvas id="album-line-chart"></canvas>
        </div>
        <!-- 小標題 -->
            <div class="ranking-header">
                <div>
                    <p>TS Pantheon</p>
                    <p class="gray-text text-overflow">Chart of all time</p>
                </div>
                <div>
                    <div>
                        <p class="chart-info-hidden">average</p> <!-- 平均排名 -->
                        <p class="chart-info-hidden">points</p> <!-- 點數 -->                       
                    </div>                   
                </div>
            </div>
        
        
        <!-- 排名，用迴圈從資料庫中讀取資料 -->
        <% for (let albumChartData of chartData) { %>
            <div class="ranking-box" onclick="window.location='/albums-ranking/<%= albumChartData.id %>'">
                <div>
                    <span class="ranking-number">#<%= albumChartData.ranking %></span> <!-- 當前排名 -->
                    <% if (albumChartData.total_last_points !== null) { %>
                        <div class="rank-difference">
                            <img class="icon" src="/icons/<%= albumChartData.last_ranking - albumChartData.ranking > 0 ? 'up' : albumChartData.last_ranking - albumChartData.ranking < 0 ? 'down' : 'right' %>.svg" alt="arrow icon" >
                            <p class="chart-info-hidden"><%= Math.abs(albumChartData.last_ranking - albumChartData.ranking) %></p>
                        </div> <!-- 排名變化 -->
                    <% } else { %>
                        <div class="rank-difference">
                            <img class="icon" src="/icons/debut.svg" alt="arrow icon" >
                        </div> <!-- 排名變化 -->
                    <% } %>
                    <img src="/album-covers/<%= albumChartData.album_name.toLowerCase() %>.webp" alt="Song Cover" class="ranking-cover"> <!-- 單曲封面照片 -->
                    <div class="text-overflow">
                        <p class="text-overflow wb-text"><%= albumChartData.album_name %></p> <!-- 歌曲名 -->
                        <p class="gray-text info-text text-overflow">some info</p> <!-- 專輯名 -->
                    </div>
                </div>
                <div>
                    <p class="chart-info-hidden"><%= albumChartData.songs_average_ranking %></p> <!-- 最高排名 -->
                    <p class="chart-info-hidden"><%= albumChartData.total_points %></p> <!-- 上次排名 -->
                    
                    <button class="info-button">
                        <img class="icon" src="/icons/info.svg" alt="info icon">
                    </button> <!-- 資訊按鈕 -->
                </div>
            </div>
        <% } %>

    </div>

</main>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const lineChart = <%- JSON.stringify(lineChartData); %>; // 將後端傳遞的 lineChartData 資料轉換為 JavaScript 物件
        const ctx = document.getElementById("album-line-chart").getContext("2d");
        const datasets = []

        lineChart.forEach( (item) => {
            const gradient = ctx.createLinearGradient(0, 0, 0, 300);
            gradient.addColorStop(0, `${item.albumColor}1A`);
            gradient.addColorStop(0.4, `${item.albumColor}1A`);   
            gradient.addColorStop(0.8, `${item.albumColor}00`);
            gradient.addColorStop(1, `${item.albumColor}00`); 
        
            const data = {
            backgroundColor: gradient,
            label: item.albumName,
            pointBackgroundColor: item.albumColor,
            data: item.pr50Data,
            borderWidth: 2,
            borderColor: item.albumColor,
            fill: 'start'
            };

            datasets.push(data);
        });

        new Chart(ctx, {
            type: 'line',
            data: {        
                labels: <%- JSON.stringify(dateData); %>,
                datasets: datasets
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: '#222222'
                        },
                        border: {
                            color: '#353535'
                        }
                    },
                    x: {
                        border: {
                            color: '#353535'
                        }
                    }
                },
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            color: '#737373',
                            font: {
                                size: 12
                            },
                            padding: 20,
                        },
                        onClick: function(e, legendItem) {
                            var index = legendItem.datasetIndex;
                            var ci = this.chart;
                            var alreadyHidden = (ci.getDatasetMeta(index).hidden === null) ? false : ci.getDatasetMeta(index).hidden;

                            ci.data.datasets.forEach(function(e, i) {
                            var meta = ci.getDatasetMeta(i);

                            if (i !== index) {
                                if (!alreadyHidden) {
                                meta.hidden = meta.hidden === null ? !meta.hidden : null;
                                } else if (meta.hidden === null) {
                                meta.hidden = true;
                                }
                            } else if (i === index) {
                                meta.hidden = null;
                            }
                            });

                            ci.update();
                        },
                    }
                }
            }
        });
        
        
        document.querySelector("#testbtn").addEventListener("click", () => {alert(datasets[0].pr50Data)})
    </script>
     
</body>
</html> 