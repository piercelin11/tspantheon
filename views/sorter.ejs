<%- include( "partials/header.ejs" ) %>

<main>
    <div class="main">
        
        <div id="sorterProgress">
            <div id="sorterBar"></div>
        </div>
        <p id="battleNumber" class="btm-margin light-gray-text">0%</b></p>
        
        <div id="myFormContainer" class="dark-bk btm-s-margin mid-padding hide">
            <form id="myForm" class="horizontal-form">
                <input type="text" placeholder="say something about this ranking" id="event" name="event" required>
                <button type="submit" class="rounded">submit and see all result</button>
            </form>
        </div>

        <div id="sorter-container" class="sorter-container btm-margin">
            <div>
            <button class="dark-bk mid-padding" onclick="if(finishFlag==0) sortList(-1);">
                <img id="leftFieldCover" src="" alt="cover"  class="btm-s-margin">
                <div>
                    <p id="leftField" class="wb-text"></p>
                    <p id="leftFieldAlbumName" class="gray-text"></p>
                </div> 
            </button>
            </div>
            <div>
                <button class="dark-bk mid-padding middleField" onclick="if(finishFlag==0) sortList(0);"><p>i like both</p></button>
                <button class="dark-bk mid-padding middleField" onclick="if(finishFlag==0) sortList(0);"><p>no opinion</p></button>
            </div> 
            <div> 
            <button class="dark-bk mid-padding" onclick="if(finishFlag==0) sortList(1);">
                <img id="rightFieldCover" src="" alt="cover" class="btm-s-margin">
                <div>
                    <p id="rightField" class="wb-text"></p>
                    <p id="rightFieldAlbumName" class="gray-text"></p>
                </div>
            </button>
            </div>
        </div>
        <button id="prevButton">previous step</button>

        <div id="resultField" class="btm-margin">      
        </div>

    


</main>
</body>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script type="text/javascript">

const songsData = <%- JSON.stringify(songs) %>;
const songsNameArray = songsData.map(item => item.song_name);

//透過歌名找專輯名
function getAlbumName(songName){
    const albumName = songsData.find( item => item.song_name === songName).album_name;
    return albumName;
} 
    
//let namMember = songsNameArray;
let namMember = [
"Tim McGraw",
"Picture to Burn",
"Teardrops on My Guitar",
"A Place in This World",
"Cold as You",
"The Outside"
];

let history = [];
let array = [];
let lstMember = [];
let parent = [];
let equal = [];
let rec = [];
let cmp1, cmp2;
let head1, head2;
let nrec;
let numQuestion;
let totalSize;
let finishSize;
let finishFlag;

//將歌曲分割成小單位
function initList() {
    var n = 0;
    var mid;
    var i;

    lstMember[n] = [];
    for (i = 0; i < namMember.length; i++) {
        lstMember[n][i] = i;
    }
    parent[n] = -1;
    totalSize = 0;
    n++;

    for (i = 0; i < lstMember.length; i++) {
        if (lstMember[i].length >= 2) {
            mid = Math.ceil(lstMember[i].length / 2);
            lstMember[n] = lstMember[i].slice(0, mid);
            totalSize += lstMember[n].length;
            parent[n] = i;
            n++;
            lstMember[n] = lstMember[i].slice(mid, lstMember[i].length);
            totalSize += lstMember[n].length;
            parent[n] = i;
            n++;
        }
    }

    for (i = 0; i < namMember.length; i++) {
        rec[i] = 0;
    }
    nrec = 0;

    for (i = 0; i <= namMember.length; i++) {
        equal[i] = -1;
    }

    cmp1 = lstMember.length - 2;
    cmp2 = lstMember.length - 1;
    head1 = 0;
    head2 = 0;
    numQuestion = 1;
    finishSize = 0;
    finishFlag = 0;
}

//用來對歌曲列表進行排序的根據 flag 的值，可以決定選擇左邊的歌曲、右邊的歌曲，或者宣告平局。
function sortList(flag) {
    recordHistory();

    var i;
    if (flag < 0) {
        rec[nrec] = lstMember[cmp1][head1];
        head1++;
        nrec++;
        finishSize++;
        while (equal[rec[nrec - 1]] != -1) {
            rec[nrec] = lstMember[cmp1][head1];
            head1++;
            nrec++;
            finishSize++;
        }
    } else if (flag > 0) {
        rec[nrec] = lstMember[cmp2][head2];
        head2++;
        nrec++;
        finishSize++;
        while (equal[rec[nrec - 1]] != -1) {
            rec[nrec] = lstMember[cmp2][head2];
            head2++;
            nrec++;
            finishSize++;
        }
    } else {
        rec[nrec] = lstMember[cmp1][head1];
        head1++;
        nrec++;
        finishSize++;
        while (equal[rec[nrec - 1]] != -1) {
            rec[nrec] = lstMember[cmp1][head1];
            head1++;
            nrec++;
            finishSize++;
        }
        equal[rec[nrec - 1]] = lstMember[cmp2][head2];
        rec[nrec] = lstMember[cmp2][head2];
        head2++;
        nrec++;
        finishSize++;
        while (equal[rec[nrec - 1]] != -1) {
            rec[nrec] = lstMember[cmp2][head2];
            head2++;
            nrec++;
            finishSize++;
        }
    }

    if (head1 < lstMember[cmp1].length && head2 == lstMember[cmp2].length) {
        while (head1 < lstMember[cmp1].length) {
            rec[nrec] = lstMember[cmp1][head1];
            head1++;
            nrec++;
            finishSize++;
        }
    } else if (head1 == lstMember[cmp1].length && head2 < lstMember[cmp2].length) {
        while (head2 < lstMember[cmp2].length) {
            rec[nrec] = lstMember[cmp2][head2];
            head2++;
            nrec++;
            finishSize++;
        }
    }

    if (head1 == lstMember[cmp1].length && head2 == lstMember[cmp2].length) {
        for (i = 0; i < lstMember[cmp1].length + lstMember[cmp2].length; i++) {
            lstMember[parent[cmp1]][i] = rec[i];
        }
        lstMember.pop();
        lstMember.pop();
        cmp1 = cmp1 - 2;
        cmp2 = cmp2 - 2;
        head1 = 0;
        head2 = 0;

        if (head1 == 0 && head2 == 0) {
            for (i = 0; i < namMember.length; i++) {
                rec[i] = 0;
            }
            nrec = 0;
        }
    }

    if (cmp1 < 0) {
        const percentage = Math.floor(finishSize * 100 / totalSize);
        const str = percentage + "%";
        $("#battleNumber").html(str);
        $("#sorterBar").css("width", `${percentage}%`);
        showResult();
        finishFlag = 1;
    } else {
        showImage();
    }
}

//顯示最終排序結果
function showResult() {
    var ranking = 1;
    var sameRank = 1;
    var str = "";
    var i;

    for (i = 0; i < namMember.length; i++) {
        const albumName = getAlbumName(namMember[lstMember[0][i]]);
        str += `<div class=\"ranking-box\"><div><span class=\"ranking-number\">#${ranking}</span> <img src=\"/album-covers/${albumName === 'I Heart?' ? 'beautiful eyes' : albumName === 'Single' ? namMember[lstMember[0][i]].toLowerCase() : albumName.toLowerCase()}.webp\" alt=\"Song Cover\" class=\"ranking-cover\"> <div class=\"text-overflow\"> <p class=\"text-overflow wb-text\">${namMember[lstMember[0][i]]}</p> <p class=\"gray-text info-text text-overflow\">${albumName}</p></div></div><div></div></div>`;
        
        if (i < namMember.length - 1) {
            if (equal[lstMember[0][i]] == lstMember[0][i + 1]) {
                sameRank++;
            } else {
                ranking += sameRank;
                sameRank = 1;
            }
        }
    }

    for (i = 0; i < namMember.length; i++) {
    array[i] = namMember[lstMember[0][i]];
    }

    $("#resultField").html(str);
    $("#myFormContainer").removeClass("hide");
    $("#sorter-container").attr("class", "hide");
    
}

//將排序數字轉換成歌名
function toNameFace(n) {
    var str = namMember[n];
    return str;
}

//將歌名顯示於比較兩首歌曲的表格中
function showImage() {
    const percentage = Math.floor(finishSize * 100 / totalSize);
    const str0 = percentage + "%";
    const str1 = "" + toNameFace(lstMember[cmp1][head1]);
    const str2 = "" + toNameFace(lstMember[cmp2][head2]);

    $("#battleNumber").html(str0);
    $("#leftField").html(str1);
    $("#leftFieldAlbumName").html(getAlbumName(str1));
    $("#rightField").html(str2);
    $("#rightFieldAlbumName").html(getAlbumName(str2));

    $("#leftFieldCover").attr("src", `/album-covers/${getAlbumName(str1) === "I Heart?" ? "beautiful eyes" : getAlbumName(str1) === "Single" ? str1.toLowerCase() : getAlbumName(str1).toLowerCase()}.webp`);
    $("#rightFieldCover").attr("src", `/album-covers/${getAlbumName(str2) === "I Heart?" ? "beautiful eyes" : getAlbumName(str2) === "Single" ? str2.toLowerCase() : getAlbumName(str2).toLowerCase()}.webp`);

    $("#sorterBar").css("width", `${percentage}%`);
    numQuestion++;
}

initList();
showImage();

document.getElementById("prevButton").addEventListener("click", () => {
    restorePreviousState();
});

//紀錄當前變數與陣列資料，用於 sortList 中
function recordHistory() {
    var currentState = {
        cmp1: cmp1,
        cmp2: cmp2,
        head1: head1,
        head2: head2,
        rec: rec.slice(), // Create a copy of rec array
        nrec: nrec,
        equal: equal.slice(), // Create a copy of equal array
        finishSize: finishSize,
        finishFlag: finishFlag,
        lstMember: lstMember.slice(), // Create a copy of lstMember array
        parent: parent.slice(), // Create a copy of parent array
        totalSize: totalSize,
        numQuestion: numQuestion
    };
    history.push(currentState);
}

//將所有變數與陣列資料重回上一步驟的資料
function restorePreviousState() {
    if (history.length > 0) {
        var prevState = history.pop();
        cmp1 = prevState.cmp1;
        cmp2 = prevState.cmp2;
        head1 = prevState.head1;
        head2 = prevState.head2;
        rec = prevState.rec;
        nrec = prevState.nrec;
        equal = prevState.equal;
        finishSize = prevState.finishSize;
        finishFlag = prevState.finishFlag;
        lstMember = prevState.lstMember.slice(); // Restore lstMember array
        parent = prevState.parent.slice(); // Restore parent array
        totalSize = prevState.totalSize;
        numQuestion = prevState.numQuestion;
        showImage(); // Update the UI
    } else {
        alert("No previous step available.");
    }
}

//表單送出後將資料傳進後端
document.querySelector("#myForm").addEventListener("submit", async (e) => {
    e.preventDefault();

    const formData = new FormData(e.target);
    const event = formData.get("event");

    const data = array;
    const date = new Date();

    try {
        const response = await fetch("/post-array", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ event, date, data })
        });

        if (response.ok) {
            window.location.href = "/songs-ranking/";
            console.log("Array posted successfully!");
        } else {
            console.error("Failed to post array:", response.statusText);
        }
    } catch (error) {
        console.error("Error posting array:", error);
    }
});
</script>
</html>
